"""
2). Написать два алгоритма нахождения i-го по счёту простого числа. Функция нахождения простого числа должна принимать на вход натуральное и возвращать соответствующее простое число. Проанализировать скорость и сложность алгоритмов.

Первый — с помощью алгоритма «Решето Эратосфена».
Примечание. Алгоритм «Решето Эратосфена» разбирался на одном из прошлых уроков. Используйте этот код и попробуйте его улучшить/оптимизировать под задачу.

Второй — без использования «Решета Эратосфена».
Примечание. Вспомните классический способ проверки числа на простоту.
Пример работы программ:

sieve(2)
3
prime(4)
7
sieve(5)
11
prime(1)
2

Примечание по профилированию кода: для получения достоверных результатов при замере времени необходимо исключить/заменить команды print и input в анализируемом коде.
"""

def sieve():  # C решетом
    n = 1000
    sieve_ = [i for i in range(n)]
    sieve_[1] = 0

    for i in range(2, n):
        if sieve_[i] != 0:
            j = i + i
            while j < n:
                sieve_[j] = 0
                j += i
    # до тысячи, не нашлось - следующий диапозон
    return sieve_


def prime():  # Без решета
    pass